수정test 

 
리눅스 토르바치: 리눅스를 잘 관리하기 위해서 깃 만들기 시작. 오늘날은 
리눅스 뿐 아니라 수많은 소스코드가 깃을 통해서 관리되고 있음.
소스코드도 결국에는 문서이기 때문에 단순히 software engin. 위헤서만 깃이 존재하지 않음.

-수많은 문서를 관리해야 하는 사람
-이 문서들이 자주 변경되는 사람
-문서의 변경 이력을 체계적으로 관리해야 하는 사람
-문서의 조작을 막아야 하는 사람
-문서를 안전하게 백업
-문서를 다른 사람과 공유해서 공동으로 작업 

1. git을 구경합시다!
	git의 3대요소
	- 버전관리 version
	- 백업 backup
	- 협업 collaborate
2. git의 목적1 - 버전관리
	다른 이름으로 저장 숫자2로 하면 hello2.txt
	그리고 새로운 작업을 추가해서
	또 옛날 것을 저장도 하고 새로운 것도 추가하려면 계속해서
	문서들을 추가추가. 
	
	그렇다면 너무나도 많은 파일들이 생성이 되어 있겠지..?
	상상력으로 1000개라고 생각하자.
	각각의 변화마다 정확한 설명과 수정날짜를 정확하게 표시하고 싶겠지.
	
	그래서 git의 버전관리 시스템.-> 어떤 환상적인 효과를 누릴 수 있는가

	자 이제
	git을 사용하고자 할 때 우리는 git에게 나 이 파일의 버전관리를 하곺어
	라고 하면 일단은 repository를 생성.
	그리고 git에게 나 퇴근할테니 버전 만들어줘,.
	summary에 Message 1이라고 하고 commit(버전 생성해줘)

	다음날 출근을 해서
	내욜을 변경한 다음에 git을 확인해보면
	각각의 버전상의 차이점을 보여주는 굉장한 기능을 가지고 있다.

	History가보면 message 1 message 2등등 각각의
	버전들에 대한 설명들이 추가되어 있음.
 	
	그리고 클릭 몇번으로 과거의 상태로 돌아갈 수도 있음!

	+ 동시작업한 것도 전부다 추가가능(파일 동시다발적 변경사항 모두 저장 가능 - 개쩜)
	두개의 파일이 하나의 버전으로 저장이 되어있는 상태를 의미하는 것임.

2. git의 목적1 - 백업
	내 컴퓨터의 불확실성: 언제 고장날지 알 수가 없다.
	확실한 것: 언젠가 내 컴퓨터는 고장난다. 따라서!!!
	귀중한 정보라면 백업(다른 컴터에 복제)
	방법으로는
	옆에 컴퓨터에
	지구반대편에 컴퓨터 - 지구가 멸망하기 전까지는 안전성 보장
	github.com 서비스 (자신의 파일과 버전들을 백업할 컴퓨터)
	-> 백업을 해주는 사업자 중 하나가 github이라고 보면 됨
	
	git은 지역저장소
	github은 원격저장소(남의 컴퓨터)

	push를 통해 원격저장소에 update를 시키는 거임.(데이터 전송)
	장소를 옮겨서 작업하려면 그 원격저장소에서 PULL를 통해서 정보를 받아옴.

3. git의 목적1 - 협업
	두 사람이 같은 행을 고치면? 
	교통정리 필.요. 
	협업에서 일어날 수 있는 덮어쓰는 것들을 교통정리 해주는 git!
	
	무튼 협업에서 덮어쓰기 등등을 절대로 일어나지 않도록 git이 처리해준다
	이것만 일단 알면 됨. 끄읏.
4. git의 종류
	git 제품군(제품 x)
	세상에는 여러가지 git의 제품들이 존재하는데 여기서 쓰였던 프로그램인
	git은 github이 만든 desktop program이었음.
	똑같은 역할 다른 사용성있는 프로그램이 있는데 그 중 하나는 
	tortoisegit - 윈도우에 기생하는 프로그램.
	우리가 사용하는 githubdesk는 기능이 심플하기 때문에(적기 때문에)
	sourcetree 자유롭지만 복잡한 프로그램 추천.

	git의 오리지널 프로그램은 설치되는 프로그램인 git bash가 나타남!(내가 가지고 있는 것)
	이 프로그램은 명령어 base기 때문에 마치 대화하듯이 git을 쓴다는 독특한 면을 가지고 있음.
	git log // git의 히스토리를 보여줌
	git status 
	git commit -am "message 10" //새로운 버전을 만들자
	git push // upload
	
	이렇듯 명령어를 통해 프로그램 제어.
